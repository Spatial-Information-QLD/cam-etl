# GraphDB needs Docker Desktop to have at least 8GB to function at a reasonable performance.

services:
  postgres:
    build:
      dockerfile: ./Dockerfile
      context: .
    command: >-
      -c max_wal_size=4GB
    # shm_size required when running ETL on large tables
    shm_size: "2gb"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # - ./QSC_Extracted_Data_20241106_194641344180-3412:/tmp/postgres-data/QSC
      # - ./Postcode_MAY23_QLD_GDA2020_SHP_108:/tmp/postgres-data/postcodes
      # - ./postgres-backup:/tmp/postgres-backup
    ports:
      - 5432:5432
    networks:
      - postgres
    profiles:
      - postgres

  graphdb:
    image: ontotext/graphdb:10.8.2
    volumes:
      - graphdb-data:/opt/graphdb/home
    ports:
      - 7200:7200
    environment:
      GDB_JAVA_OPTS: >-
        -Xmx3g -Xms1g
        -Dgraphdb.home=/opt/graphdb/home
        -Dgraphdb.workbench.importDirectory=/opt/graphdb/home/graphdb-import
        -Dgraphdb.workbench.cors.enable=true
        -Denable-context-index=true
        -Dentity-pool-implementation=transactional
        -Dhealth.max.query.time.seconds=600
        -Dgraphdb.append.request.id.headers=true
        -Dreuse.vars.in.subselects=true
    networks:
      - graphdb
      - web
    profiles:
      - graphdb

  preload:
    container_name: graphdb-preload
    image: ontotext/graphdb:10.8.2
    entrypoint:
      [
        "/opt/graphdb/dist/bin/importrdf",
        "preload",
        "--force",
        "--restart",
        "--id",
        "addressing",
        "/opt/graphdb/home/graphdb-import",
      ]
    environment:
      GDB_JAVA_OPTS: >-
        -Xmx7g -Xms2g
        -Dgraphdb.home=/opt/graphdb/home
        -Dgraphdb.workbench.importDirectory=/opt/graphdb/home/graphdb-import
        -Dgraphdb.workbench.cors.enable=true
        -Denable-context-index=true
        -Dentity-pool-implementation=transactional
        -Dhealth.max.query.time.seconds=600
        -Dgraphdb.append.request.id.headers=true
        -Dreuse.vars.in.subselects=true
    volumes:
      - graphdb-data:/opt/graphdb/home
      - ./graphdb-import:/opt/graphdb/home/graphdb-import
    networks:
      - preload
    profiles:
      - graphdb:preload

  web:
    image: ghcr.io/spatial-information-qld/cam-web
    environment:
      - GRAPHDB_URL=http://graphdb:7200
    ports:
      - 8000:8000
    networks:
      - web
    profiles:
      - web

volumes:
  postgres-data:
  graphdb-data:

networks:
  postgres:
  graphdb:
  preload:
  web:
