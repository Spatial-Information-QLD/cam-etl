# https://taskfile.dev

version: "3"

tasks:
  postgres:driver:download:
    desc: Download Postgres JDBC driver. No longer needed as we're not using pyspark anymore.
    cmds:
      - curl -o postgresql.jar https://jdbc.postgresql.org/download/postgresql-42.6.0.jar

  postgres:up:
    desc: Start Postgres Docker service.
    cmds:
      - docker compose --profile postgres up -d

  postgres:down:
    desc: Stop Postgres Docker service.
    cmds:
      - docker compose --profile postgres down

  graphdb:up:
    desc: Start GraphDB Docker service.
    cmds:
      - docker compose --profile graphdb up -d

  graphdb:preload:
    desc: Preload data into GraphDB Docker service. Warning, this overwrites existing data.
    cmds:
      - task: graphdb:down
      - docker compose --profile graphdb:preload up
      - docker compose --profile graphdb:preload down

  graphdb:down:
    desc: Stop GraphDB Docker service.
    cmds:
      - docker compose --profile graphdb down

  etl:db:qrt:
    desc: Run the ETL for QRT.
    cmds:
      - uv run python etl_qrt.py
      - zip -r qrt-rdf.zip qrt-rdf

  etl:db:pndb:
    desc: Run the ETL for PNDB.
    cmds:
      - uv run python etl_pndb_pre_validate.py
      - uv run python etl_pndb.py
      - zip -r pndb-rdf.zip pndb-rdf

  etl:db:lalf:
    desc: Run the ETL for LALF.
    cmds:
      - uv run python etl_lalf_parcel.py
      - zip -r lalf-rdf.zip lalf-rdf

  etl:
    desc: Run the ETL.
    cmds:
      - task: etl:db:qrt
      - task: etl:db:pndb

  etl:clean:
    desc: Delete the files in output/ directory.
    cmds:
      - cmd: rm qrt-rdf/*.nt
        ignore_error: true
      - cmd: rm pndb-rdf/*.nt
        ignore_error: true
      - cmd: rm lalf-rdf/*.nt
        ignore_error: true

  ontodia:
    desc: Run ontodia server.
    cmds:
      - .venv/bin/python -m http.server -d ontodia/

  dev:load-db:
    desc: Clear the locally produced data, recreate data, spin down GraphDB, load data, spin back up GraphDB.
    cmds:
      - task: etl:clean
      - task: etl
      - task: graphdb:preload
      - task: graphdb:up

  dev:clean:
    cmds:
      - task: etl:clean
      - task: etl

  dev:
    desc: Alias for etl task.
    cmds:
      - task: etl

  web:up:
    cmds:
      - docker compose --profile web up -d

  web:down:
    cmds:
      - docker compose --profile web down
